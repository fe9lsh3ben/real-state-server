// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema


//Importent:-
// [npx prisma migrate deploy] :Use Case: Non-development environments (staging, production). Does creat megration file.
// [npx prisma db push] :Use Case: Development environments for rapid prototyping. Does not creat megration file.

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") //"postgresql://postgres:1@localhost:5432/real_estate?schema=public"
}

// run prisma generate


// Define the Role table

// Define the Permission table


//_________________________________________ Real Estate Concept Modules ________________________________________//


////________ Enums Module__________//

enum User_Type {
  ADMIN
  REAL_ESTATE_OFFICE_OWNER
  REAL_ESTATE_OFFICE_STAFF
  BENEFICIARY
  BUSINESS_BENEFICIARY //Develope for this BUSINESS_BENEFICIARY
  GOVERMENTAL_AGENT
  OTHER
	@@map("UserType")
}

enum Office_Or_User_Status {     //Develope in server app previelage
  IN_HOLD
  ACTIVE
  UNACTIVE
  TEMP_UNACTIVE
  RESTRICTED
  BANNED
	@@map("OfficeOrUserStatus")
}

enum Real_Estate_Unit_Type {
  LAND
  BAUILDING
  APARTMENT
  VILLA
  STORE
  AGRICULTURAL
  STORAGE
  OFFICE
  EXHIBITION
  OTHER
	@@map("RealEstateType")
}




enum Committed_By {
    OFFICE_OWNER
    OFFICE_STAFF
    BENEFICIARY //(Normal user)
    BUSINESS_BENEFICIARY

}
//________ Models Module__________//




// Define the Setting table
model Setting {
  Setting_ID   Int    @id @default(autoincrement())
  Name  String @unique
  Value String
}

// Define the AuditTrail table
model AuditTrail {
  AT_ID       Int      @id @default(autoincrement())
  UserId      Int?
  Action      String
  Description String?
  CreatedAt   DateTime @default(now())
}

model TermsAndCondetions {
    TC_ID       String     @id
    CreatedAt   DateTime   @default(now())
    Content     Json[]
    Other       Json[]
    CommittedBy Committed_By
    Users       User[]
    MadeBy      String

}

// Define the Session table
model Session {
  SToken_ID Int      @id @default(autoincrement())
  UserId    Int      @unique
  User      User     @relation(fields: [UserId], references: [User_ID])
  Token     String   @unique
  ExpiresAt DateTime
}


// Define the User table
model User {
  User_ID            Int                @id @default(autoincrement())
  Role              User_Type          @default(BENEFICIARY)
  CreatedAt         DateTime           @default(now())
  UpdatedAt         DateTime           @updatedAt
  TermsCondetionID  String
  TermsCondetion    TermsAndCondetions @relation(fields: [TermsCondetionID], references: [TC_ID])

  //___

  Username          String             @unique
  Email             String             @unique
  Password          String
  RefreshTokens     RefreshToken?
  Session           Session? 
  ProfileImage      Bytes?
  GovID             String             @unique
  Address           Json?        //{Region, City, Destrect, altitude, Longtude}
  FullName          String[]
  UserPhone         String
  //___
  
  Other1            Json[]      // Admin={Log_records}, Beneficiary={Beneficiary_class}, Govermental={Other}, Office_Staff{BelongToOffice}
  
  RE_Offices        RealEstateOffice[] @relation(name: "Owner")
  
  Employer_REO_ID   Int?
  Employer_REO      RealEstateOffice?  @relation(name: "OfficeStaff", fields: [Employer_REO_ID], references: [Office_ID])
  
  FalLicense        String?
  Balance           Decimal            @default(0.0)
  UserStatus        Office_Or_User_Status?  @default(ACTIVE)
}


model RefreshToken {
  RToken_ID     Int      @id @default(autoincrement())
  RefreshToken  String   @unique
  UserId        Int      @unique
  User          User     @relation(fields: [UserId], references: [User_ID])
  CreatedAt     DateTime @default(now())
  ExpiresAt     DateTime
}




model RealEstateOffice {
  Office_ID           Int              @id @default(autoincrement())
  CommercialRegister  String
  Owner_ID            Int              @unique
  Owner               User             @relation(name: "Owner",fields: [Owner_ID], references: [User_ID])
  OfficeName          String
  OfficeImage         Bytes?
  Address             Json  //{Region, City, Destrect, altitude, Longtude}
  Status              Office_Or_User_Status
 
  Staff               User[]           @relation("OfficeStaff")
 
  RealEstateUnits     RealEstateUnit[] @relation("OfficeAndREUnit")
  Contracts           Contract[]
  Ads                 RealEStateAD[]
  Visitors            Json? //{date : number of visitors}
  
  Balance             Decimal          @default(0.0)
  CreatedAt           DateTime         @default(now())
  UpdatedAt           DateTime         @updatedAt
}

model RealEstateUnit {
  REU_ID               Int                @id @default(autoincrement())
  UnitType             Real_Estate_Unit_Type
  DeedNumber           String             @unique
  DeedDate             DateTime
  DeedOwners           Json[] //{Owner_Phone_Number, Owner_GovID, Owner_Name}
  
  AffiliatedOfficeID   Int?
  AffiliatedOffice     RealEstateOffice? @relation("OfficeAndREUnit", fields: [AffiliatedOfficeID], references: [Office_ID])

  Initiator            Json //{type (office/owner by platform), id, name, contact_id_number}
  
  Address              Json   //{Ragion, City, Destrect, Altitude, Longtude}
  UnitImages           Bytes[]
  CreatedAt            DateTime           @default(now())
  UpdatedAt            DateTime           @updatedAt
  Polygon              Unsupported("POLYGON")?

  Specifications       Json[] //Based on Unit type *Refare at the end of this page.
  UnitAD               RealEStateAD?
}

model Contract {
  Contract_ID       Int              @id @default(autoincrement()) //D&T
  InitiatorOffice   Int           
  OfficeID          RealEstateOffice @relation(fields: [InitiatorOffice], references: [Office_ID])
  PartiesConsent    Json[]    //{GOV ID,Name, SignatureOTP, Phone Number}
  Contant           Json      //{content, contract terms}   
  Other             Json[]
  CreatedAt         DateTime         @default(now())
  UpdatedAt         DateTime         @updatedAt

}


model RealEStateAD {
  AD_ID             Int              @id @default(autoincrement())
  AdInitiator       Int              @unique @map("Ad_Initiator")
  Initiator         RealEstateOffice @relation(fields: [AdInitiator], references: [Office_ID])
  AdLicense         String           @map("Ad_License")
  CreatedAt         DateTime         @default(now())
  UpdatedAt         DateTime         @updatedAt

  RealEstateID      Int              @unique
  RealEstate        RealEstateUnit   @relation(fields: [RealEstateID], references: [REU_ID])
  AdContent         Json []  //{Type of estate,Description, Price, Other} @map("Ad_Content")
  AdStartedAt       DateTime         @map("Ad_StartedAt")
  AdExpiry          DateTime         @map("Ad_Expiry")
  Hedden            Boolean         @default(false)
  
}


///Real Estate unit specifications feild in JSON: -

/// LAND : {Area, shape, Y-sides, X-sides}
/// BUILDING : {Floors, apartments, avg_rooms, avg_toilets, stores, elevator, parking}
/// APARTMENT : {Rooms, Toilets, elevator}
/// VILLA : {Duplex, Floors, Rooms, Toilets, Parking}
/// STORE : {Area}
/// AGRICULTURAL : {Area}
/// STORAGE : {Area}
/// OFFICE : {Area}
/// EXHIBITION : {Area}