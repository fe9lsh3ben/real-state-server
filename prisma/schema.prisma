// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


// run prisma generate

// Define the Role table


// Define the Permission table


// Define the Session table
// Define the Session table
model Session {
  ID        Int       @id @default(autoincrement())
  UserId    Int       @unique
  User      User      @relation(fields: [UserId], references: [ID])
  Token     String    @unique
  ExpiresAt DateTime
}




// Define the Setting table
model Setting {
  ID    Int    @id @default(autoincrement())
  Name  String @unique
  Value String
}

// Define the AuditTrail table
model AuditTrail {
  ID          Int      @id @default(autoincrement())
  UserId      Int?
  Action      String
  Description String?
  CreatedAt   DateTime @default(now())
}



// Define the User table
model User {
  Role              Role     @default(BENEFICIARY)
  ID                Int      @id @default(autoincrement())
  CreatedAt         DateTime @default(now())
  UpdatedAt         DateTime @updatedAt
  TermsCondetion_ID String
  Username          String   @unique
  Email             String   @unique
  Session           Session?
  ProfileImage      Bytes?
  GovID             String?
  Address           Json
  FullName          String[]
  UserPhone         String
  FalLicense        String
  Other1            Json[]
  RE_Office         RealEstateOffice[]
  Visitors          Int?
  Balance           Decimal?
  
}

model RealEstateOffice{
    ID  Int @id @default(autoincrement())
    CommercialRegister    String
    OwnerID    Int       @unique
    Owner      User      @relation(fields: [OwnerID], references: [ID])
    Region String
    City String
    Address Json
    Status  OfficeStatus
    Staff   OfficeStaff[]
    RealStateUnits RealEstateUnit[] @relation("OfficeAndREUnitRelation")
    Contracts Contract[]
    ADs RealStateAD[]
    Bargains Bargain[]
    Visitors Int
    Balance Decimal
    CreatedAt DateTime
    UpdatedAt DateTime
    TearmsAndAgreements Boolean 

}

model RealEstateUnit{
    ID Int @id @default(autoincrement())
    UnitType RealStateType
    DeedNumber String
    DeedDate DateTime
    DeedOwner Json[] 
    RealEstateOffice RealEstateOffice[] @relation("OfficeAndREUnitRelation")
    CreatorID String
    CreatedBy String 
    CreatorContactNumber String 
    Address Json
    CreatedAt DateTime
    UpdatedAt DateTime
    TermsAndAgreements Boolean

}

model Contract{
    ID Int @id @default(autoincrement())
    ResponsableOffice Int @unique
    ResponsableOfficeRelation RealEstateOffice @relation(fields: [ResponsableOffice], references: [ID])
}

model Bargain{
    ID Int @id @default(autoincrement())
    InitiatorOffice Int @unique
    OfficeRelation RealEstateOffice @relation(fields: [InitiatorOffice], references: [ID])
}

model OfficeStaff{
    ID Int @id @default(autoincrement())
    OfficeID Int
    Office RealEstateOffice @relation(fields: [OfficeID], references: [ID])
    
}

model RealStateAD{
    ID Int @id @default(autoincrement())
    AD_Maker Int @unique
    MakerRelation RealEstateOffice @relation(fields: [AD_Maker], references: [ID])
}




enum Role {
    ADMIN
    OFFICE_OWNER
    BENEFICIARY
    BUSINESS_BENEFICIARY
    GOVERMENTAL
    OTHER
}

enum OfficeStatus {
    ACTIVE
    UNACTIVE
    TEMP_UNACTIVE
    RESTRICTED
    BANNED
}

enum RealStateType {
    LAND
    BAUILDING
    VILLA
    STORE
    AGRICULTURAL
    OTHER
}